{"version":3,"sources":["firebase.js","components/Todo.js","components/Todos.js","components/App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","placeholder","todo","todos","value","onChange","target","Button","type","onClick","collection","doc","id","set","merge","List","ListItem","button","ListItemText","primary","secondary","variant","color","event","delete","Todos","map","App","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","data","FormControl","InputLabel","Input","disabled","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAaeA,EAZKC,IAASC,cAAc,CACvCC,OAAQ,0CACVC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,Y,OCNjBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBN,EAAMO,QAAQC,WAAWH,MAC1CI,OAAQ,iBACRC,UAAWV,EAAMW,QAAQ,GACzBC,QAASZ,EAAMa,QAAQ,EAAG,EAAG,QA+ClBC,MA3Cf,SAAcC,GACV,IAAMC,EAAUlB,IAChB,EAAwBmB,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAgBA,OACI,qCACA,cAACC,EAAA,EAAD,CACIJ,KAAMA,EACNK,QAAS,SAACC,GAAD,OAAOL,GAAQ,IAF5B,SAIA,sBAAKM,UAAWT,EAAQX,MAAxB,UACI,8CACA,uBAAOqB,YAAaX,EAAMY,KAAKC,MAAOC,MAAQT,EAAOU,SAAY,SAAAN,GAAC,OAAIH,EAASG,EAAEO,OAAOF,UACxF,cAACG,EAAA,EAAD,CAAQC,KAAK,SAASC,QAhBX,SAACV,GAChBrC,EAAGgD,WAAW,SAASC,IAAIrB,EAAMY,KAAKU,IAAIC,IAAI,CAC1CX,KAAMP,GACP,CAACmB,OAAO,IACXlB,EAAS,IACTF,GAAQ,IAWJ,yBAIJ,eAACqB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACI,cAACC,EAAA,EAAD,CAAcC,QAAQ,OAAOC,UAAW9B,EAAMY,KAAKC,UAEvD,cAACI,EAAA,EAAD,CAAQE,QAAW,SAAAV,GAAC,OAAIL,GAAQ,IAAhC,kBACA,cAACa,EAAA,EAAD,CAAQc,QAAQ,YAAYC,MAAM,UAAUb,QAAS,SAAAc,GAAK,OAAI7D,EAAGgD,WAAW,SAASC,IAAIrB,EAAMY,KAAKU,IAAIY,UAAxG,2BCzCGC,MAZf,SAAenC,GACX,OACI,mCACI,6BACKA,EAAMa,MAAMuB,KAAI,SAACxB,EAAMU,GAAP,OACb,cAAC,EAAD,CAAeV,KAAOA,GAAXU,W,0BCwChBe,MAzCf,WACE,MAA0BnC,mBAAS,IAAnC,mBAAOW,EAAP,KAAcyB,EAAd,KACA,EAA0BpC,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAsBA,OApBAiC,qBAAU,WACRnE,EAAGgD,WAAW,SAASoB,QAAQ,YAAa,QAAQC,YAAW,SAAAC,GAC7DJ,EAASI,EAASC,KAAKP,KAAI,SAAAf,GAAG,MAAK,CAACC,GAAID,EAAIC,GAAIT,MAAOQ,EAAIuB,OAAOhC,eAEnE,IAiBD,sBAAKF,UAAU,MAAf,UACE,8CACA,iCACE,eAACmC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2BACA,cAACC,EAAA,EAAD,CAAO7B,KAAK,OAAOJ,MAAOT,EAAOU,SApBnB,SAACkB,GACrB3B,EAAS2B,EAAMjB,OAAOF,aAqBlB,cAACG,EAAA,EAAD,CAAQ+B,UAAW3C,EAAOa,KAAK,SAASC,QAlB7B,SAACc,GAChBA,EAAMgB,iBACN7E,EAAGgD,WAAW,SAAS8B,IAAI,CACzBtC,KAAMP,EACN8C,UAAW9E,IAASS,UAAUsE,WAAWC,oBAE3Cf,EAAS,GAAD,mBAAKzB,GAAL,CAAYR,KACpBC,EAAS,KAWqDyB,QAAQ,YAAYC,MAAM,UAApF,sBAGA,cAAC,EAAD,CAAOnB,MAAOA,WC9BPyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a33ce229.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDpn9H5dQSMa7xZDVTzXS0V8xQwS3jwqTs\",\r\n  authDomain: \"todo-again-21e27.firebaseapp.com\",\r\n  projectId: \"todo-again-21e27\",\r\n  storageBucket: \"todo-again-21e27.appspot.com\",\r\n  messagingSenderId: \"470127094931\",\r\n  appId: \"1:470127094931:web:6198d1cc65726e4085f166\",\r\n  measurementId: \"G-6G6V57ZSZZ\"\r\n})\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","import { Button, List, ListItem, ListItemText, makeStyles, Modal } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport db from '../firebase'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction Todo(props) {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = useState(false)\r\n    const [input, setInput] = useState('')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    const updateTodo = (e) => {\r\n        db.collection('todos').doc(props.todo.id).set({\r\n            todo: input\r\n        }, {merge: true})\r\n        setInput('')\r\n        setOpen(false)\r\n    }\r\n    return (\r\n        <>\r\n        <Modal\r\n            open={open}\r\n            onClose={(e) => setOpen(false)}\r\n        >     \r\n        <div className={classes.paper}>\r\n            <h1>I am a modal</h1>\r\n            <input placeholder={props.todo.todos} value= {input} onChange = {e => setInput(e.target.value)} />\r\n            <Button type=\"submit\" onClick={updateTodo}>Update</Button>\r\n\r\n        </div> \r\n         </Modal>\r\n        <List>\r\n            <ListItem button>\r\n                <ListItemText primary=\"todo\" secondary={props.todo.todos}/>\r\n            </ListItem>\r\n            <Button onClick = {e => setOpen(true)}>Edit</Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={event => db.collection('todos').doc(props.todo.id).delete()}>Delete</Button>\r\n        </List>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nfunction Todos(props) {\r\n    return (\r\n        <>\r\n            <ul>\r\n                {props.todos.map((todo, id) => (\r\n                    <Todo key={id} todo= {todo} />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n","import './App.css';\nimport React, {useState, useEffect} from 'react'\nimport Todos from './Todos'\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport db from '../firebase'\nimport firebase from 'firebase'\n\nfunction App() {\n  const [todos, setTodos] = useState([  ])\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({id: doc.id, todos: doc.data().todo})))\n    })\n  }, [])\n\n  const  changeHandler =(event) => {\n    setInput(event.target.value)\n  }\n\n  const  addTodo = (event) => {\n    event.preventDefault()\n    db.collection('todos').add({\n      todo: input, \n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setTodos([...todos, input])\n    setInput('')\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Hello world!</h1>\n      <form>\n        <FormControl>\n          <InputLabel>Write a todo</InputLabel>\n          <Input type=\"text\" value={input} onChange={changeHandler} />\n        </FormControl>\n        <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\">\n          Add todo\n        </Button>\n        <Todos todos={todos} />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}